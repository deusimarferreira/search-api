<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

    <springProperty scope="context" name="environment" source="spring.profiles.active"/>

    <springProperty scope="context" name="application" source="application.title"/>
    <springProperty scope="context" name="version" source="application.version"/>
    <springProperty scope="context" name="codename" source="application.codename"/>

    <springProfile name="prod">
        <springProperty scope="context" name="gelf-host" source="gelf.hostname" defaultValue="udp:logs.vivareal.com"/>
    </springProfile>
    <springProfile name="!prod">
        <springProperty scope="context" name="gelf-host" source="gelf.hostname"
                        defaultValue="udp:qa-logs.vivareal.com"/>
    </springProfile>

    <appender name="SENTRY" class="com.getsentry.raven.logback.SentryAppender">
        <dsn>
            http://513d1511fc2b468dbbac3eb376e927ce:813d7d4f691b4f078f3128f8c514464e@sentry-logs.vivareal.com/64?options
        </dsn>
        <tags>environment:${environment},version:${version},codename:${codename},cluster:${es.cluster.name}</tags>
        <ravenFactory>com.getsentry.raven.DefaultRavenFactory</ravenFactory>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
                <expression>throwable instanceof IllegalArgumentException
                    || org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(throwable) instanceof IllegalArgumentException
                    || throwable instanceof org.springframework.beans.InvalidPropertyException
                    || throwable instanceof org.jparsec.error.ParserException</expression>
            </evaluator>
            <onMatch>DENY</onMatch>
        </filter>
    </appender>

    <appender name="GELF" class="biz.paluch.logging.gelf.logback.GelfLogbackAppender">
        <host>${gelf-host}</host>
        <port>12201</port>
        <version>1.1</version>
        <extractStackTrace>true</extractStackTrace>
        <additionalFields>
            environment=${environment},application=${application},product=search,cluster=${es.cluster.name},server=${java.rmi.server.hostname}
        </additionalFields>
        <additionalFieldTypes>environment=String,application=String,product=String</additionalFieldTypes>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <appender name="ASYNC_SENTRY" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SENTRY"/>
    </appender>

    <appender name="ASYNC_GELF" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="GELF"/>
    </appender>

    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="CONSOLE"/>
    </appender>

    <root level="INFO">
        <springProfile name="dev, test">
            <appender-ref ref="ASYNC_CONSOLE"/>
        </springProfile>
        <springProfile name="qa, prod">
            <appender-ref ref="ASYNC_GELF"/>
            <appender-ref ref="ASYNC_SENTRY"/>
        </springProfile>
    </root>

    <logger name="org.springframework">
        <level value="warn"/>
    </logger>

    <logger name="com.netflix">
        <level value="warn"/>
    </logger>

    <logger name="com.getsentry">
        <level value="warn"/>
    </logger>

    <logger name="springfox">
        <level value="warn"/>
    </logger>
</configuration>
